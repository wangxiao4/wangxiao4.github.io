<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xiao4 800K</title>
    <link>http://www.wangxiao4.xyz/</link>
    <description>Recent content on Xiao4 800K</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>版权所有©2019–2021，Xiao4 800K；保留所有权利。</copyright>
    <lastBuildDate>Sun, 07 Feb 2021 09:46:11 +0800</lastBuildDate><atom:link href="http://www.wangxiao4.xyz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>抓百度下拉框内容</title>
      <link>http://www.wangxiao4.xyz/blog/bddorpdown/</link>
      <pubDate>Sun, 07 Feb 2021 09:46:11 +0800</pubDate>
      
      <guid>http://www.wangxiao4.xyz/blog/bddorpdown/</guid>
      <description>百度？？？你要干嘛 朋友总是有很多奇怪的需求，这次他想要百度搜索智能提示的内容，就是这个
至于他要干吗用，这个并没有太多去问，只是一时兴起，决定白嫖百度一下 开门见山的说，白嫖不好，如果大家有能力还是去购买相应的接口，等我有钱了就买百度云在抓数据😊
如何做 朋友给了我一个非常机智的方法
0. 打开电脑，打开浏览器 1. 让程序模拟用户操作，在浏览器的输入框中输入预存的词组 2. 截取当前浏览器的显示截图 3. 程序识别图中内容 4. 将内容保存到本地  至此完成一次操作，后续就是无限循环的抓取动作
我的想法就比较简单粗暴了，因为数据不可能缓存在本地，所以每次输入内容，百度一定会回服务器抓取的， 于是我打开浏览器，控制台监控浏览器的请求，发现了一些频率较高的重复Get请求，打开一看，哎嘿……这是啥
整理下思路 众所周知，百度引擎会爬各种网站的数据，所以爬虫对他们来说那是相当的熟悉，所以肯定会限制我们爬取他们 那么首要任务就是要测试这些Get请求是否有限制，最简单的方法直接PostMan测试一下，修改各种参数，头信息， 如果能够正常返回，剩下就是我们如何处理这些数据了
扬帆启航 0. 查找接口 1. 首先PostMan测试接口情况 2. 整理数据 3. 编写脚本 4. 运行测试 5. 简单压测   结果五根线程110词在2秒完成 ……666 最后附赠GO语言测试代码地址 csdn：https://download.csdn.net/download/at555444/15118651  </description>
    </item>
    
    <item>
      <title>谷歌浏览器代理如何玩</title>
      <link>http://www.wangxiao4.xyz/blog/chromeproxy/</link>
      <pubDate>Mon, 01 Feb 2021 11:14:08 +0800</pubDate>
      
      <guid>http://www.wangxiao4.xyz/blog/chromeproxy/</guid>
      <description>谷歌浏览器代理如何玩 在我们玩爬虫的时候，通常需要访问大量的站点，而对百度或者谷歌这类搜索引擎对爬虫通常都有着很强的限制 比如当你的爬虫大量抓取百度的时候，百度会给你提示输入验证码等措施避免你频繁的访问， 当然想要解决这种问题，有很多种方法，比如使用代理，对目标站点隐藏自己的信息， 或者写对应的验证代码，通过验证限制
当然我认为使用代理是比较方便，且直接的方法 接下来就说说，我遇到的情况 首先先说一下这个小工具的目标，通过批量输入要查询的站点域名，查询域名在不同搜索引擎中的收录情况 包含：百度，谷歌，搜狗，360搜索，Archive 等
在经过测后发现，通常谷歌浏览器在同时开启50个搜索页面后，会有明显的卡顿，可能和我机器有一定的关系 但是无关紧要，关键的问题是，当同时开启50+的抓取行为后，上述的搜索引擎会弹出验证，这无疑增加了 操作人员的工作量，所以这就是我们现在要处理的问题之一，增加代理访问，绕过验证
在哪里增加，如何增加？  首先增加代理要在哪里增加哪？ 最开始我只发现了Archive在快速访问的时候会出现断开的问题，所以我想给这个站点增加一层代理， 也就是说针对这个站点有效的代理，市面上的各种代理，通常都是针对PC网卡端或浏览器进行监听并转发代理模式去操作 这明显和我的想要的不太一样，所以我准备镜像这个站点，快速的写了一些代码将它镜像做好，在镜像处理的同时增加一层代理 成功绕过限制后进行批量测试……百度首先发送了一个友好的验证码  我意识到可能需要在整体增加代理，在哪里增加比较合适那？无疑如果我在监听网卡可能会更麻烦，索性直接在Chrome浏览器增加算了 查看ChromeAPI 发现了有用的接口 1. &amp;ndash;proxy-server 启动命令中增加一个代理地址，但是由于我的访问量很大所以使用一个或多个并不起作用 2. pac文件	通过增加pac文件动态修改代理IP 这就很有意思了
 如何增加那？ 由于Chrome直接增加pac文件很麻烦，所以使用SwitchyOmega插件  安装SwitchyOmega插件，并打开管理面板 新建模式 选择PAC情景模式 创建模式，并选中 增加PAC脚本代码，据说是JS代码，并包含FindProxyForURL(url, host) 方法即可 测试一下 这时已经成功的设置了代理 你可以在脚本中写一些随机函数，让每一次请求都使用不同代理，也可以在PAC网址处增加动态获取接口 而我则使用了后者，因为这样使用起来更加方便，在工具中增加一个API用于提供PAC脚本，并在后台实时刷新可用的代理地址， SwitchyOmega插件中设置15分钟刷新一次PAC脚本，这样在基本上完成了代理的动态设置    不足之处 SwitchyOmega插件 最低刷新频率是15分钟，这里在某些层面上限制了代理的更换速率，可以通过修改插件完成自己想要的效果 不过对于我来说 还算够用
有些问题只有你自己经历了才会记忆深刻，多动手，多实验，总会找到办法 希望能对你有所帮助</description>
    </item>
    
    <item>
      <title>云服务器云空间那点事</title>
      <link>http://www.wangxiao4.xyz/blog/cloudspace/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://www.wangxiao4.xyz/blog/cloudspace/</guid>
      <description>免费的服务器到底能不能用 目前市面上的免费服务器有很多，无论大厂小厂还是黑心作坊几乎都会推出一些免费的服务器 用于增加自己的客户量，抢占市场。 而多数小厂在没有知名度的情况下要么各种投放广告，要么就是降低用户投入成本，从而占有一席之地
目前来说也不能绝对否决小厂的服务器不好，的确我也碰到了一些还不错的厂商，接下来我就盘点一下我玩过的服务器
  八点云 推过一款云空间是免费的，关键是它还支持.net4.5，对于我这个.net方向来说那真是极好的 其他的感觉还不错，需要实名认证，但是需要备案，对于测试来说，还算够用了
  彩虹云 有一款美国免费空间，环境仅PHP/MySQL，并且月流量20G ，这是一个重点，它限流的 但是作为美国空间，当然也就无需备案喽
  三丰云 一款曾经给我无限遐想的厂商，超大的带宽超便宜的价格，而且还是北方线路， 免费主机算是推广续命版，月流量和数据库都很小，至少.vip和.xyz域名无法绑定，需要备案 还有坑爹的终身套餐，网评不太好，体验后总体来说有点弱，并没有官网描述的那么好
  我比较看重以下几点  各项参数，如空间大小，数据库大小，带宽等 空间地址，国外和香港地区，免备案会方便一点 续命周期和方式，不需要你发广告的已经算良心商家了，我见过最烦的一款是阿贝云的有多烦自己体验吧 稳定性，通常免费的空间都是用来测试，所以能找到一款相对稳定的算不错了  当然还有很多其他的厂商，大多是坑，如果有不错的请留言给我 相对来说，一分钱一分货，想好要一点的体验当然还是需要花一点钱
再来看几款相对来说性价比不错的云服务器   优刻得 用过一年的香港服务器，总体讲，首购入门版，做玩具很划算，有的时候远程桌面可能上不去 网络不稳定或调整的时候会给你发提示邮件，续费……真贵啊
  奇异互动 这一款我看了很久，因为想要做私服，所以特意看了这边的裸机和服务器，由于自身原因并没有过多体验 不过看一下价格 这带宽，这性能，这价格感觉可以后期尝试一下
  群英 老牌厂商，用了他家的高防大带宽服务器近一年的时间，对我而言感觉感觉相当不错了 虽然官方客服有时候让人很恼火，问问题可能要等很久才会回复你，或者索性就不回复了 但是管家这边还是很靠谱的，由于我买错服务器，在没有催的情况下大概半个月退了款 如果你需要开放WEB需要备案，就连IP访问也不行，不备案服务器再好你也玩不起来
  天翼云 活动期间找到一个低配置5M带宽的服务器，价格算是非常便宜了，加上一块100G数据盘也才190+/年 不过高带宽部分就相当贵了，同样WEB端口需要备案，自用的话可以用80，8080以外的端口 5M-10M可以考虑这个
  大厂 百度 腾讯 阿里云 华为云 这几个大厂都有自己活动，而且总会有几款入门的供你玩，也是相当不错的选择 而且新用户 大多有免费一个月半年的那种服务器，超值
  virmach 一款以便宜著称的厂商，网上会有各种优惠卷，各种教程，通常大家都是用它来科学上网的 用过一段时间，被墙了，想体验的可以试一下，很便宜</description>
    </item>
    
    <item>
      <title>关于《Go语言学习笔记》这本书</title>
      <link>http://www.wangxiao4.xyz/blog/gonote/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://www.wangxiao4.xyz/blog/gonote/</guid>
      <description>#关于《Go语言学习笔记》这本书
书如其名，真的算是一本笔记，书中大量篇幅都是代码块，文字介绍较少，基础理论内容也很少， 更多的是对某一些特性和一些用法上做实践，并且如果你细读的话也会发现一些写错的地方。 如果非要嗑这本书 建议先看一遍**《Go by Example 中文版》**，对基本使用和语法有一定了解后再嗑 笔者下卷部分并没有继续看，因为感觉还不到看源码的时候，所以再深造一段时间在回来看一下。 这里粗略的整理一下知识点，没时间看这本书，可以看一下笔者整理的部分，并不全，也只是针对笔者感兴趣的地方进行了整理   defer 延迟操作 无论函数是否发生异常 都会在return后执行 类型别名写法 type myInt = int 类型定义写法 type myInt int 注：类型定义与原始类型无关且不会继承原类型方法 需要强转后才能相互操作 不能前置自增 ++a 不能将自增作为表达式 if(a++)&amp;gt;0 const 常量不能使用取址操作 const a int -&amp;gt; &amp;amp;a 指针指向同一个地址 或者 都为 nil 两个指针相等 当给复合类型赋值时 需要遵守以下规则  必须带有类型名称 var a struct=struct{} {必须紧跟类型后 且在一行 值以 , 隔开 多行情况 尾值以, 或者} 结尾   使用 for range 的时候 for域内将会使用复制后的目标数据，for域内对目标数据操作 不会影响下一次取值，但会影响for域外的目标数据 使用 for range 后的参数如果是方法 那么该方法也只会获取一次 break continue 也可以像 goto 一样增加跳转位置 函数 不支持方法重载，不支持默认参数 ，支持多返回（这点很有意思） 函数采用值拷贝 包括指针类型也是 返回值命名后可以在方法体中当变量使用 最后直接return 无需带返回值 很方便 延迟调用 包括注册和调用，并增加额外的缓存开销，所以性能较直接调用偏低一点 panic和recover是 内置函数 类似于try catch 操作 panic 引发一个错误 recover读取最后一个错误。recover只能在延迟函数 defer 中使用 可以将string看作是byte数组，两者引用地址是相同的，string为只读类型，所以其操作大多需要重新分配内存地址，当有大量使用追加操作，损耗因能严重，并产生相当多的垃圾，建议使用strings.</description>
    </item>
    
    <item>
      <title>Createblog</title>
      <link>http://www.wangxiao4.xyz/blog/createblog/</link>
      <pubDate>Wed, 20 Jan 2021 15:59:43 +0800</pubDate>
      
      <guid>http://www.wangxiao4.xyz/blog/createblog/</guid>
      <description></description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>http://www.wangxiao4.xyz/about/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://www.wangxiao4.xyz/about/</guid>
      <description> 欢迎来到我的空间，我是王小4，是一名程序员 小时候爱玩游戏，知道游戏是用程序写出来的，但是不会写，所以在上大学填报志愿的时候毅然决然的选择了软件 如果上天再给我一次选择的机会，我……依然会选择软件 😀  有啥 1. 一些避坑记录 2. 开发语言使用教程 3. 技术分享 4. 开源小项目 5. 一些稀奇古怪的笔记  提示 如果有什么问题或建议，请立即马上联系我，作为技术人，我们应该具有分享精神，希望能和大家共同进步 当然不限技术，生活方面也是ok的，亦或是心里问题，也可以联系我，多个朋友，多个有趣的想法  希望 不负时代 为了梦想 为了大瓦房 扬帆~启航~ 加油~奥里给~ </description>
    </item>
    
    <item>
      <title>发邮件给我</title>
      <link>http://www.wangxiao4.xyz/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.wangxiao4.xyz/contact/</guid>
      <description>发送</description>
    </item>
    
  </channel>
</rss>
